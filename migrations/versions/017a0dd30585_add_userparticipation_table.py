"""Add UserParticipation table

Revision ID: 017a0dd30585
Revises: c914642d6e58
Create Date: 2018-10-14 11:25:03.460864

"""
# revision identifiers, used by Alembic.

import sqlalchemy as sa
import transaction
from alembic import op

from dbas.database import DBDiscussionSession

revision = '017a0dd30585'
down_revision = 'c914642d6e58'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user_participation',
                    sa.Column('user_uid', sa.Integer(), nullable=False),
                    sa.Column('issue_uid', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['issue_uid'], ['issues.uid'], ),
                    sa.ForeignKeyConstraint(['user_uid'], ['users.uid'], ),
                    sa.PrimaryKeyConstraint('user_uid', 'issue_uid')
                    )
    # ### end Alembic commands ###
    DBDiscussionSession.remove()
    DBDiscussionSession.configure(bind=op.get_bind())

    issue_query = "SELECT issues.uid, issues.slug FROM discussion.public.issues"

    slug2uid = {slug: uid for (uid, slug) in DBDiscussionSession.execute(issue_query).fetchall()}

    history_query = "SELECT history.author_uid, history.path FROM discussion.public.history;"
    historys = DBDiscussionSession.execute(history_query).fetchall()

    insert_query = "INSERT INTO discussion.public.user_participation (user_uid, issue_uid) VALUES (?, ?) ON CONFLICT DO NOTHING;"

    for author_uid, path in historys:
        # /discuss/<slug>/ ...
        slug = path.split('/', 2)[1]

        # in case that the line above gets something weird (path IS sometimes malformed)
        issue_id = slug2uid.get(slug)
        if issue_id:
            DBDiscussionSession.execute(insert_query, author_uid, issue_id)

    transaction.commit()


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_participation')
    # ### end Alembic commands ###
