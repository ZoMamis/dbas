image: hhucn/dbas-build

variables:
  INIFILE: "docker.ini"
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/pip-cache"

cache:
  paths:
    - "$CI_PROJECT_DIR/pip-cache"
  key: "$CI_PROJECT_ID"

.job-template: &run-server
  services:
    - hhucn/docker-dbas-postgres
  before_script:
    - pip install --quiet -U pip
    - pip install --quiet -r requirements.txt
    - python setup.py --quiet develop
    - cp $INIFILE development.ini
    - init_discussion_sql $INIFILE > /dev/null 2>&1
    - init_news_sql $INIFILE > /dev/null 2>&1

start-server:
  <<: *run-server
  stage: build
  script:
    - uwsgi --ini-paste $INIFILE --daemonize uwsgi.daemon.log

flake8:
  stage: build
  script:image: hhucn/dbas-build

jshint:
  stage: build
  script:
    - npm install -g jshint
    - jshint ./dbas/static/js/{main,ajax,discussion,review}/*.js
  allow_failure: true

unit:
  <<: *run-server
  stage: test
  script:
    - uwsgi --ini-paste $INIFILE --daemonize uwsgi.daemon.log
    - nosetests --with-coverage --cover-package=dbas --cover-package=api --cover-package=graph --cover-package=export --cover-package=admin --with-timer -w $(pwd) dbas graph admin api export

acceptance:
  <<: *run-server
  stage: test
  script:
    - uwsgi --ini-paste $INIFILE --daemonize uwsgi.daemon.log
    - nosetests --with-timer --timer-ok 10 --process-timeout=120 tests/test_frontend
    - pip install --quiet flake8
    - flake8 .
  allow_failure: true
